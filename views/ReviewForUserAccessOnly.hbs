<!DOCTYPE html>
<html>
<head>
  <title>Restaurant Review </title>
  <!--</script type="text/javascript" src="https://me.kis.v2.scr.kaspersky-labs.com/FD126C42-EBFA-4E12-B309-BB3FDD723AC1/main.js?attr=hSL5fasf5WUVXIxXxJ2Tm-QXZzYaei4LXT3iR9XFZncbdzcr24QjZ9DVBFbiODWiAserJQZv7RpJb0pQbxd_2NIcrlItwDTuTUPTY926ZARcbQPwjA6ZS0UZePZL5FiyZQFtw-PkHclYJyqcM04-JjsgXNEb2awDWYiFppR7S5yysePVXTJJnKQOC9OGNc_PkTj7yf2xyMvqgssCcxkGIEdDQv_LrDMr78i2Ogs3Vm2L2P4JAnUIywXTUr8tyBpfjsMh5DJ46YQsiG5f2QLfY6vIC5NJB11NzogD2Fz2wD2jd3yaWS556IHR8Qa3yCgQuYTBM2k-ZRgL0TEn0-rYmHT0UO3prgn6BE3l3__dc7LvgDqGHu0DUfywaTphiMzzQO7B6SHjoGblCWgEaJKT_C9xeDLkIwW8I4YQVxuiKdJDaSCujxF9coVSgIS2KLoRsqrO_1Pv3jMD1RpBsT61KUuH2W2kwPO_H7sxU9CZ3lQ" charset="UTF-8"></script>
  -->
  <script type="text/javascript">
      window.onload = function()
      {
        //loadReviews();
      }
      
  </script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Cabin:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&family=Fjalla+One&display=swap');
    html
    {
      background-color: #EEE2DC;
      font-family: "Fjalla One", sans-serif;
    }
    .stars {
      display: inline-block;
      font-size: 24px;
      cursor: pointer;
    }
    .stars:hover {
      color: orange;
    }
    .selected {
      color: orange;
    }
    .comments { 
      margin-top: 10px;
    }
    #title
    {
      text-align: center;
    }
    #comments
    {
      border: 1px solid bisque;
      border-radius: 100px;
      margin: auto;
      background-color: #edc7b7;
    }
    #comments h3
    {
      margin-left: 60px;
    }
    #comments ul
    {
      margin-left: 35px;
    }
    #comments li
    {
      margin-left: 50px;
      text-overflow: ellipsis;
    }
    span
    {
      margin-top: 0px;
      margin-bottom: 5px;
    }
    .rating {
      display: inline-block;
      position: relative;
      height: 40px;
      line-height: 40px;
      font-size: 40px;
    }

    .rating label {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      cursor: pointer;
    }

    .rating label:last-child {
      position: static;
    }

    .rating label:nth-child(1) {
      z-index: 5;
    }

    .rating label:nth-child(2) {
      z-index: 4;
    }

    .rating label:nth-child(3) {
      z-index: 3;
    }

    .rating label:nth-child(4) {
      z-index: 2;
    }

    .rating label:nth-child(5) {
      z-index: 1;
    }

    .rating label input {
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
    }

    .rating label .icon {
      float: left;
      color: transparent;
    }

    .rating label:last-child .icon {
      color: #000;
    }

    .rating:not(:hover) label input:checked ~ .icon,
    .rating:hover label:hover input ~ .icon {
      color: #09f;
    }

    .rating label input:focus:not(:checked) ~ .icon:last-child {
      color: #000;
      text-shadow: 0 0 5px #09f;
    }
    #helpful
    {
      position: absolute;
      right: 100px;
    }
    .avatar
    {
      height: 30px;
      width: 30px;
    }
  </style>
</head>
<body>
  <a style="float: left; font-size: larger;" href="/index">BACK</a>
  <h1 id="title">{{storeName}} Review Rating System</h1>
  <div id="comments">
    <h3>Comments:</h3>
  <ul id="commentList"></ul>
    {{#each review}}
    <li>
      <span class="icon">{{rating}}★</span>
      <img src="{{userPic}}" class="avatar">  {{user}} :<span id="{{revID}}"> {{comment}}</span> <br><span id="helpful"><span><button id="edit{{revID}}" {{hidden}} onclick="edit('{{../storeName}}','{{user}}','{{comment}}','{{num}}', this, '{{revID}}')">Edit</button><button {{hidden}} id="del{{revID}}" onclick="delRev('{{../storeName}}','{{user}}','{{comment}}','{{num}}',this, '{{revID}}')">Delete</button></span>  <span id="helpcount{{revID}}">{{helpcount}}</span><input type="radio" name="{{revID}}" id="{{revID}}" value=1 onchange="change('{{../storeName}}','{{user}}','{{comment}}','{{revID}}','{{num}}')"><span>&#128077</span>
      <input type="radio" name="{{revID}}" id="{{revID}}" value=-1 onchange="change('{{../storeName}}','{{user}}','{{comment}}','{{revID}}','{{num}}')"><span>&#128078</span></span>
      <br>
      <br> 
      </li>
    {{/each}}
   
  </div>
  <!--
  <div class="stars" onclick="rate(1)">★</div>
  <div class="stars" onclick="rate(2)">★</div>
  <div class="stars" onclick="rate(3)">★</div>
  <div class="stars" onclick="rate(4)">★</div>
  <div class="stars" onclick="rate(5)">★</div>
<div class="comments">
    <!--<input type="text" id="commentInput" placeholder="Add your review here...">
    <textarea id="commentInput" rows="5" cols="40" Placeholder="Add your review here"></textarea>
    <input type="file" id="imageInput">
    <button onclick="checkLogin()">Submit</button>
  </div>
  -->
  <!-- CODE FROM: https://codepen.io/neilpomerleau/pen/wzxzQM-->
  <form action="{{link}}" method="{{method}}">
    <div class="rating">
      <input type="text" value="{{storeName}}" hidden="true" name="storeName">
    <label>
      <input type="radio" name="stars" value="1" required/>
      <span class="icon">★</span>
    </label>
    <label>
      <input type="radio" name="stars" value="2" />
      <span class="icon">★</span>
      <span class="icon">★</span>
    </label>
    <label>
      <input type="radio" name="stars" value="3" />
      <span class="icon">★</span>
      <span class="icon">★</span>
      <span class="icon">★</span>   
    </label>
    <label>
      <input type="radio" name="stars" value="4" />
      <span class="icon">★</span>
      <span class="icon">★</span>
      <span class="icon">★</span>
      <span class="icon">★</span>
    </label>
    <label>
      <input type="radio" name="stars" value="5" required/>
      <span class="icon">★</span>
      <span class="icon">★</span>
      <span class="icon">★</span>
      <span class="icon">★</span>
      <span class="icon">★</span>
    </label>
    </div>
    <br>
    <br>
    <div>
    <textarea id="commentInput" name="commentInput" rows="5" cols="40" Placeholder="Add your review here"></textarea>
    <input type="file" id="imageInput" name="imageInput">
    <input type="submit" value="Submit" onclick="checkLogin()">
    </div>
 </form> 
  <script>
    let selectedRating = 0;
    const commentList = document.getElementById('commentList');
    const commentInput = document.getElementById('commentInput');
    const imageInput = document.getElementById('imageInput');

    function rate(rating) {
      selectedRating = rating;
      const stars = document.getElementsByClassName('stars');
      for (let i = 0; i < stars.length; i++) {
        if (i < rating) {
          stars[i].classList.add('selected');
        } else {
          stars[i].classList.remove('selected');
        }
      }
    }

    function checkLogin()
    {
      {{#if name}}
        console.log("Adding COmment");
        //addComment();
      {{else}}
        window.location.href="login";
      {{/if}}
    }

    function change(store,name,comment,revID,num)
    {
      console.log(store,name,comment,num);

      {{#if name}}
        var button = document.getElementsByName(revID);
        var value =
        {
          user:name,
          comment:comment,
          num:num,
          count:0
        };
        var id = name+comment+num;
        button.forEach(check =>
        {
          if(check.checked)
          {
            value.count = check.value;
          }

        })
        console.log(value);
        console.log(value.count);
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function()
        {
          if(this.readyState==4 && this.status==200)
          {
            document.getElementById("helpcount"+revID).innerHTML = this.responseText;
          }
        };

          console.log("Sent "+ value);
          xhttp.open("GET","/update?name="+name+"&comment="+comment+"&num="+num+"&value="+value.count+"&store="+store, true);
          xhttp.send();
      {{else}}
        window.location.href="login";
      {{/if}}
      
    }
    function edit(y,user,comment,num,x,id)
    {
      var idString = id+"textarea";
      console.log("editing!");
      if(x.innerHTML==="Edit")
        x.innerHTML = "Cancel Edits";
        else
        x.innerHTML = "Edit";
      const added = document.createElement('span');

      const edit = document.createElement('textarea');
      edit.id = idString;
      edit.cols = "40";
      edit.rows = "5";
      edit.value = comment;

      const upD = document.createElement('button');
      upD.textContent = "Save Edits";

      added.appendChild(edit);
      added.appendChild(upD);

      var span = document.querySelector('#'+id);
      var parent = span.parentNode;
      var ta = parent.querySelector('#'+idString);

      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function()
      {
        if(this.readyState==4 && this.status==200)
        {
          var len = parseInt(this.responseText.substring(0,this.responseText.indexOf("+")));
          var first = this.responseText.indexOf("+")+1;
          document.getElementById(id).innerHTML = this.responseText.substring(first,first+len);
          document.getElementById(id).id = this.responseText.substring(first+len+1);
          document.getElementById("del"+id).id = "del"+this.responseText.substring(first+len+1);
          document.getElementById("edit"+id).id = "edit"+this.responseText.substring(first+len+1);
          parent.removeChild(added);
          x.innerHTML="Edit";

        }
      };

      upD.onclick = function()
      {
        console.log("saving!");
        
        xhttp.open("GET","/saveEdit?name="+user+"&comment="+comment+"&num="+num+"&value="+edit.value+"&store="+y, true);
        xhttp.send();
        console.log("saved!");
      };
      console.log([...parent.children]);
      if(ta===null)
        parent.append(added);
      else
        parent.removeChild(ta.parentNode);

    }
    function delRev(store,user,comment,num,x, id)
    {
       
      var parent = x.parentNode;
      var pParent = parent.parentNode;
      var sParent = pParent.parentNode;
      var mParent = sParent.parentNode;
      var delID = x.id.substring(x.id.indexOf("l")+1);
      console.log(delID);
      var xhttp = new XMLHttpRequest();
      var del = "";
      xhttp.onreadystatechange = function()
      {
        if(this.readyState==4 && this.status==200)
        {
          del = this.responseText;
          console.log(del);
          if(del==="true")
            mParent.removeChild(sParent);
        }
      };

      console.log("Sent " + del);
      xhttp.open("GET","/delete?name="+user+"&comment="+comment+"&num="+num+"&store="+store+"&value="+delID, true);
      xhttp.send();

    }
/*
    function addComment() {
      
      const comment = commentInput.value;
      var uname = localStorage.getItem("loggeduname");
      if (comment === '') return;

      const file = imageInput.files[0];
      const reader = new FileReader();

      reader.onload = function(event) {
        const imageUrl = event.target.result;

        const review = {
          name: uname,
          rating: selectedRating,
          comment: comment,
          image: imageUrl
        };

        saveReview(review);

        const li = document.createElement('li');
        li.innerHTML = `<span>${review.name}: ${review.rating} star(s): ${review.comment}</span><br><img src="${review.image}" alt="Review Image" width="200">`;
        li.style.marginTop="10px";
        commentList.appendChild(li);

        commentInput.value = '';
        imageInput.value = '';
      };

      if (file) {
        reader.readAsDataURL(file);
      } else {
        const review = {
          name: uname,
          rating: selectedRating,
          comment: comment
        };

        saveReview(review);

        const li = document.createElement('li');
        li.innerText = `${review.name}: ${review.rating} star(s): ${review.comment}`;
        commentList.appendChild(li);

    
        commentInput.value = '';
      }
    }
  */
  /*
    function saveReview(review) {
      let reviews = [];
      if (localStorage.getItem(revs)) {
        reviews = JSON.parse(localStorage.getItem(revs));
      }

      reviews.push(review);

      localStorage.setItem(revs, JSON.stringify(reviews));
    }
    */
/*
    function loadReviews() {
      if (localStorage.getItem(revs)) {
        const reviews = JSON.parse(localStorage.getItem(revs));
        reviews.forEach(review => {
          const li = document.createElement('li');
          if(review.image!=null)
          {
            li.innerHTML = `<span>${review.name}: ${review.rating} star(s): ${review.comment}<button id='${review.name}+${review.comment}' class='delete' onclick='deleteComment(this)'>Delete</button></span><br><img src="${review.image}" alt="Review Image" width="200">`;
          }
          else
          {
            li.innerHTML = `<span>${review.name}: ${review.rating} star(s): ${review.comment}<button id='${review.name}+${review.comment}' class='delete' onclick='deleteComment(this)'>Delete</button></span>`;
          }
          
          commentList.appendChild(li);
        });
      }
    }
*/
    function deleteComment(x)
    {
      var uname = localStorage.getItem("loggeduname");
      var reviews = [];
      var id = x.id.substring(0,x.id.indexOf("+"));
      var comment = x.id.substring(x.id.indexOf("+")+1);

      if(localStorage.getItem(revs))
      {
        reviews = JSON.parse(localStorage.getItem(revs));
      }
      if(uname == id)
      {
        reviews.forEach(review=>{
          if(review.name == uname)
          {
            if(review.comment == comment)
            {
              reviews.pop(review);
            }
          }
        })
      }
      localStorage.setItem(revs,JSON.stringify(reviews));
      location.reload();
    }
    //loadReviews();
  </script>
</body>
</html>